// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotnet_webapi_erp.Data;

#nullable disable

namespace dotnet_webapi_erp.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240714043500_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0-preview.6.24327.4");

            modelBuilder.Entity("dotnet_webapi_erp.App.Models.Abstract.BaseEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BaseEntity");

                    b.HasDiscriminator().HasValue("BaseEntity");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("dotnet_webapi_erp.App.Models.Abstract.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Person");

                    b.HasDiscriminator().HasValue("Person");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("dotnet_webapi_erp.App.Models.Concrete.Association", b =>
                {
                    b.HasBaseType("dotnet_webapi_erp.App.Models.Abstract.BaseEntity");

                    b.Property<Guid>("Company")
                        .HasColumnType("TEXT");

                    b.Property<string>("Office")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("User")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Association");
                });

            modelBuilder.Entity("dotnet_webapi_erp.App.Models.Concrete.Company", b =>
                {
                    b.HasBaseType("dotnet_webapi_erp.App.Models.Abstract.BaseEntity");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberEmployees")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Owner")
                        .HasColumnType("TEXT");

                    b.HasIndex("CNPJ")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("Company");
                });

            modelBuilder.Entity("dotnet_webapi_erp.App.Models.Concrete.Order", b =>
                {
                    b.HasBaseType("dotnet_webapi_erp.App.Models.Abstract.BaseEntity");

                    b.Property<Guid>("GuidClient")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GuidCompany")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GuidProduct")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Order");
                });

            modelBuilder.Entity("dotnet_webapi_erp.App.Models.Concrete.Sale", b =>
                {
                    b.HasBaseType("dotnet_webapi_erp.App.Models.Abstract.BaseEntity");

                    b.Property<Guid>("GuidClient")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GuidEmployee")
                        .HasColumnType("TEXT");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.ToTable("BaseEntity", t =>
                        {
                            t.Property("GuidClient")
                                .HasColumnName("Sale_GuidClient");

                            t.Property("OrderNumber")
                                .HasColumnName("Sale_OrderNumber");

                            t.Property("Price")
                                .HasColumnName("Sale_Price");

                            t.Property("Status")
                                .HasColumnName("Sale_Status");
                        });

                    b.HasDiscriminator().HasValue("Sale");
                });

            modelBuilder.Entity("dotnet_webapi_erp.App.Models.Concrete.StockMovement", b =>
                {
                    b.HasBaseType("dotnet_webapi_erp.App.Models.Abstract.BaseEntity");

                    b.Property<decimal>("CurrentPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<Guid>("GuidProduct")
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeMovement")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.ToTable("BaseEntity", t =>
                        {
                            t.Property("GuidProduct")
                                .HasColumnName("StockMovement_GuidProduct");
                        });

                    b.HasDiscriminator().HasValue("StockMovement");
                });

            modelBuilder.Entity("dotnet_webapi_erp.App.Models.Concrete.StockProduct", b =>
                {
                    b.HasBaseType("dotnet_webapi_erp.App.Models.Abstract.BaseEntity");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GuidCompany")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.ToTable("BaseEntity", t =>
                        {
                            t.Property("Description")
                                .HasColumnName("StockProduct_Description");

                            t.Property("GuidCompany")
                                .HasColumnName("StockProduct_GuidCompany");

                            t.Property("Name")
                                .HasColumnName("StockProduct_Name");

                            t.Property("Price")
                                .HasColumnName("StockProduct_Price");
                        });

                    b.HasDiscriminator().HasValue("StockProduct");
                });

            modelBuilder.Entity("dotnet_webapi_erp.App.Models.Concrete.Suppliers", b =>
                {
                    b.HasBaseType("dotnet_webapi_erp.App.Models.Abstract.BaseEntity");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("TEXT");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.ToTable("BaseEntity", t =>
                        {
                            t.Property("CNPJ")
                                .HasColumnName("Suppliers_CNPJ");

                            t.Property("Name")
                                .HasColumnName("Suppliers_Name");
                        });

                    b.HasDiscriminator().HasValue("Suppliers");
                });

            modelBuilder.Entity("dotnet_webapi_erp.App.Models.Concrete.Client", b =>
                {
                    b.HasBaseType("dotnet_webapi_erp.App.Models.Abstract.Person");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GuidCompany")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Client");
                });

            modelBuilder.Entity("dotnet_webapi_erp.App.Models.Concrete.User", b =>
                {
                    b.HasBaseType("dotnet_webapi_erp.App.Models.Abstract.Person");

                    b.Property<DateOnly>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("User");
                });
#pragma warning restore 612, 618
        }
    }
}
